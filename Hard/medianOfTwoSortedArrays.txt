Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).



SOLUTION : 

function findMedianSortedArrays(nums1: number[], nums2: number[]): number {
let m = nums1.length;
    let n = nums2.length;

    // make sure nums1 is the shorter array
    if (m > n) {
        let temp = nums1;
        nums1 = nums2;
        nums2 = temp;
        let tempLength = m;
        m = n;
        n = tempLength;
    }

    let iMin = 0;
    let iMax = m;
    let halfLen = Math.floor((m + n + 1) / 2);

    while (iMin <= iMax) {
        let i = Math.floor((iMin + iMax) / 2);
        let j = halfLen - i;
        if (i < iMax && nums2[j-1] > nums1[i]) {
            iMin = i + 1;
        } else if (i > iMin && nums1[i-1] > nums2[j]) {
            iMax = i - 1;
        } else {
            let maxLeft;
            if (i === 0) { 
                maxLeft = nums2[j-1];
            } else if (j === 0) {
                maxLeft = nums1[i-1];
            } else {
                maxLeft = Math.max(nums1[i-1], nums2[j-1]);
            }
            if ((m + n) % 2 === 1) {
                return maxLeft;
            }

            let minRight;
            if (i === m) {
                minRight = nums2[j];
            } else if (j === n) {
                minRight = nums1[i];
            } else {
                minRight = Math.min(nums1[i], nums2[j]);
            }
            return (maxLeft + minRight) / 2;
        }
    }
    return 0;
};